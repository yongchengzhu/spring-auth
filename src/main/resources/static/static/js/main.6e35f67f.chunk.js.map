{"version":3,"sources":["components/HomePage.tsx","apis/server.tsx","hooks/useTokenConfirm.tsx","components/TokenConfirmPage.tsx","components/App.tsx","index.tsx"],"names":["HomePage","axios","create","baseURL","useTokenConfirm","props","useState","message","setMessage","useEffect","regex","match","location","search","groups","token","server","put","then","catch","err","console","log","TokenConfirmPage","App","path","component","Homepage","ReactDOM","render","document","querySelector"],"mappings":"gMAQeA,EANgB,WAC7B,OACE,0C,uBCFWC,E,OAAAA,EAAMC,OAAO,CAAEC,QAAS,SCsBxBC,EAnBS,SAACC,GAAgC,IAAD,EACxBC,mBAAS,oCADe,mBAC/CC,EAD+C,KACtCC,EADsC,KAgBtD,OAbAC,qBAAU,WACR,IAAMC,EAAa,YAAG,oBAAH,WACbC,EAAiCN,EAAMO,SAASC,OAAOF,MAAMD,GACnE,GAAGC,GAASA,EAAMG,OAAQ,CACxB,IAAMC,EAAeJ,EAAMG,OAAOC,MAClCC,EAAOC,IAAP,8BAAkCF,IAC/BG,MAAK,kBAAMV,EAAW,8DACtBW,OAAM,SAACC,GAAD,OAAgBZ,EAAWY,EAAIb,iBAExCc,QAAQC,IAAI,0CAIT,CAACf,ICRKgB,EARyC,SAAAlB,GAAU,IAAD,EACtCD,EAAgBC,GAAlCE,EADwD,oBAG/D,OACE,6BAAMA,ICQKiB,EAXW,WACxB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,WAAWC,UAAWH,IAClC,kBAAC,IAAD,CAAOE,KAAK,IAAIC,UAAWC,OCNnCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.6e35f67f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst HomePage: React.FC<{}> = () => {\r\n  return (\r\n    <div>Homepage</div>\r\n  );\r\n};\r\n\r\nexport default HomePage;","import axios from 'axios';\r\n\r\nexport default axios.create({ baseURL: '/api' });","import { useEffect, useState } from \"react\";\r\n\r\nimport server from '../apis/server';\r\nimport { RouteComponentProps } from \"react-router\";\r\n\r\nconst useTokenConfirm = (props: RouteComponentProps) => {\r\n  const [message, setMessage] = useState('Confirming token, please wait...');\r\n\r\n  useEffect(() => {\r\n    const regex: RegExp = /\\?token=(?<token>.*)[&?]/;\r\n    const match: RegExpMatchArray | null = props.location.search.match(regex);\r\n    if(match && match.groups) {\r\n      const token:string = match.groups.token;\r\n      server.put(`/user/confirm?token=${token}`)\r\n        .then(() => setMessage('Email confirmation successful, your account is enabled.'))\r\n        .catch((err: Error) => setMessage(err.message));\r\n    } else {\r\n      console.log('Failed: Cannot extract valid token.');\r\n    }\r\n  });\r\n\r\n  return [message];\r\n}\r\n\r\nexport default useTokenConfirm;","import React from 'react';\r\nimport { RouteComponentProps } from 'react-router';\r\n\r\nimport useTokenConfirm from '../hooks/useTokenConfirm';\r\n\r\nconst TokenConfirmPage: React.FC<RouteComponentProps> = props => {\r\n  const [message]: any[] = useTokenConfirm(props);\r\n  \r\n  return (\r\n    <div>{message}</div>\r\n  );\r\n};\r\n\r\nexport default TokenConfirmPage;","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport Homepage from './HomePage';\r\nimport TokenConfirmPage from './TokenConfirmPage';\r\n\r\nconst App: React.FC<{}> = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/confirm\" component={TokenConfirmPage} />\r\n        <Route path=\"/\" component={Homepage} />\r\n      </Switch>\r\n    </Router>\r\n  )\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}